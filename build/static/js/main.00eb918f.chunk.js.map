{"version":3,"sources":["components/GameCardReactions/index.js","components/GameCardTopics/index.js","components/GamePlayerBoard/index.js","utils/generateUniqueId.js","components/Cards/Reactions/basicReaction.js","components/Cards/Reactions/bigExplanation.js","components/Cards/Reactions/boldClaim.js","components/Cards/Reactions/exposed.js","components/Cards/Reactions/goodWill.js","components/Cards/Reactions/lowComent.js","components/Cards/Reactions/netForgives.js","components/Cards/Reactions/netRage.js","components/Cards/Reactions/pushLimits.js","components/Cards/Reactions/redemption.js","components/Cards/Reactions/socialNetwork.js","components/Cards/Reactions/webForgives.js","components/Cards/Reactions/webRage.js","components/Cards/Topics/basicTopic.js","components/Cards/Topics/boldMemeTopic.js","components/Cards/Topics/diyTopic.js","components/Cards/Topics/dogTopic.js","components/Cards/Topics/exposeTopic.js","components/Cards/Topics/hotPic.js","components/Cards/Topics/movieCriticTopic.js","components/Cards/Topics/nostalgicTopic.js","components/Cards/Topics/oddTopic.js","components/Cards/Topics/politicsTopic.js","components/Cards/Topics/topic1.js","components/Cards/Topics/topic2.js","components/Cards/Topics/topic3.js","components/Cards/Topics/topic4.js","components/Cards/Topics/topic5.js","Game.js","index.js","components/GameBoard/index.js"],"names":["GameCardReaction","this","props","onClickPlayCard","greens","yellows","reds","i","card","green","likes","push","role","aria-label","reports","yellow","red","className","onClick","clickCardHandler","bind","name","textBox","React","Component","GameCardTopics","onClickChooseTopic","dificulty","GameBoard","k","chooseTopicHandle","playCardHandler","console","log","clickPassPhase","cardsInRedBoard","player","board","map","key","id","cardsInYellowBoard","cardsInGreenBoard","cardsHand","hand","generateUniqueId","randomBytes","toString","BasicReaction","data","use","bigExplanation","qty","cards","basicReaction","boldClaim","exposed","goodWill","lowComent","netForgives","netRage","pushLimits","redemption","socialNetwork","webForgives","webRage","BasicTopic","boldMemeTopic","basicTopic","diyTopic","dogTopic","exposeTopic","hotPic","movieCriticTopic","nostalgicTopic","oddTopic","politicsTopic","topic1","topic2","topic3","topic4","topic5","iTreta","setup","players","eliminated","offer","topics","concat","create","deck","topicsOffer","discardPile","discartedTopics","activePlayers","endIf","G","ctx","currentPlayer","events","endPhase","winner","length","draw","phases","setupPhase","start","next","onBegin","shuffleDeck","sort","Math","random","shuffleTopic","shift","playPhase","turn","dealTopics","stages","topicSelection","moves","chooseTopic","topicIndex","splice","endStage","skip","endTurn","playStage","playCard","cardIndex","chosenPlayer","pass","o","endPlayerTurn","finishPhase","ai","enumerate","phase","move","args","window","location","protocol","hostname","port","server","ITretaClient","Client","game","chooseTopicHandler","numPlayers","multiplayer","SocketIO","App","state","playerID","setState","render","document","getElementById"],"mappings":"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","file":"static/js/main.00eb918f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default class GameCardReaction extends React.Component {\r\n  clickCardHandler() {\r\n    if(this.props.onClickPlayCard){\r\n      this.props.onClickPlayCard()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let greens = [];\r\n    let yellows = [];\r\n    let reds = [];\r\n    for(let i = 0; i<this.props.card.green.likes; i++){\r\n      greens.push((\r\n        <span role=\"img\" aria-label=\"Like\">\r\n        👍\r\n        </span>\r\n      ));\r\n    }\r\n    for(let i = 0; i<this.props.card.green.reports; i++){\r\n      greens.push((\r\n        <span role=\"img\" aria-label=\"Report\">\r\n          🚫\r\n        </span>\r\n      ));\r\n    }\r\n    for(let i = 0; i<this.props.card.yellow.likes; i++){\r\n      yellows.push((\r\n        <span role=\"img\" aria-label=\"Like\">\r\n        👍\r\n        </span>\r\n      ));\r\n    }\r\n    for(let i = 0; i<this.props.card.yellow.reports; i++){\r\n      yellows.push((\r\n        <span role=\"img\" aria-label=\"Report\">\r\n        🚫\r\n        </span>\r\n      ));\r\n    }\r\n    for(let i = 0; i<this.props.card.red.likes; i++){\r\n      reds.push((\r\n        <span role=\"img\" aria-label=\"Like\">\r\n        👍\r\n        </span>\r\n      ));\r\n    }\r\n    for(let i = 0; i<this.props.card.red.reports; i++){\r\n      reds.push((\r\n        <span role=\"img\" aria-label=\"Report\">\r\n        🚫\r\n        </span>\r\n      ));\r\n    }\r\n    \r\n    \r\n    return (\r\n      <div className=\"game-card-reactions\" onClick={this.clickCardHandler.bind(this)}>\r\n        <div className=\"name\">{this.props.card.name}</div>\r\n        <div className=\"green\">\r\n          {greens}\r\n        </div>\r\n        <div className=\"yellow\">\r\n          {yellows}\r\n        </div>\r\n        <div className=\"red\">\r\n          {reds}\r\n        </div>\r\n        <div className=\"textBox\">\r\n          {this.props.card.textBox}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default class GameCardTopics extends React.Component {\r\n  clickCardHandler() {\r\n    if(this.props.onClickChooseTopic){\r\n      this.props.onClickChooseTopic()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let dificulty = [];\r\n\r\n    for(let i = 0; i<this.props.card.green ;i++){\r\n      dificulty.push((\r\n        <span role=\"img\" aria-label=\"GreenCard\">\r\n            <div className=\"greenCard\"></div>\r\n        </span>\r\n      ));\r\n    }\r\n    for(let i = 0; i<this.props.card.yellow; i++){\r\n      dificulty.push((\r\n        <span role=\"img\" aria-label=\"YellowCard\">\r\n            <div className=\"yellowCard\"></div>\r\n        </span>\r\n      ));\r\n    }\r\n    for(let i = 0; i<this.props.card.red; i++){\r\n        dificulty.push((\r\n          <span role=\"img\" aria-label=\"RedCard\">\r\n              <div className=\"redCard\"></div>\r\n          </span>\r\n        ));\r\n      }\r\n    \r\n    \r\n    return (\r\n      <div className=\"game-card-topics\" onClick={this.clickCardHandler.bind(this)}>\r\n        <div className=\"name\">{this.props.card.name}</div>\r\n        <div className=\"dificulty\">\r\n          {dificulty}\r\n        </div>\r\n\r\n        {/* <div>\r\n          {this.props.textBox}\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport GameCardReaction from \"../GameCardReactions\";\r\nimport \"./styles.css\";\r\n\r\nexport default class GameBoard extends React.Component {\r\n  // callPlayerHandler(k){\r\n  //   this.props.callPlayerHandler(k);\r\n  // }\r\n  chooseTopicHandle(k){\r\n    this.props.chooseTopicHandle(k);\r\n  }\r\n  playCardHandler(k){\r\n    this.props.playCardHandler(k);\r\n  }\r\n  clickPassPhase () {\r\n    console.log('Pass');\r\n    this.props.clickPassPhase();\r\n  }\r\n\r\n  setChallenge(){\r\n\r\n  }\r\n  render() {\r\n    let cardsInRedBoard = this.props.player.board.red.map((card) => (\r\n        <GameCardReaction card={card} key={card.id}/>\r\n      ));  \r\n    let cardsInYellowBoard = this.props.player.board.yellow.map((card) => (\r\n      <GameCardReaction card={card} key={card.id}/>\r\n    ));\r\n    let cardsInGreenBoard = this.props.player.board.green.map((card) => (\r\n      <GameCardReaction card={card} key={card.id}/>\r\n    ));\r\n      \r\n    let cardsHand = this.props.player.hand.map((card, k) => (\r\n       <GameCardReaction card={card} key={card.id} onClickPlayCard={()=>{this.playCardHandler(k)}}/>\r\n    ));\r\n    // let cardsDeck = this.props.player.deck.map((card) => (\r\n    //   <GameCard card={card} key={card.id}/>\r\n    // ));\r\n    // let cardsAdm = this.props.player.admZone.map((card, k) => (\r\n    //    <GameCard card={card} key={card.id} onClickDiscardCard={()=>{this.discardCardHandler(k)}} onClickPlayCard={()=>{this.playCardHandler(k)}}/>\r\n    // ));\r\n\r\n\r\n    return (\r\n      <div className=\"player-board\">\r\n        \r\n        <h1>{this.props.player.name} </h1>\r\n    <h1>Likes: {this.props.player.likes} Reports: {this.props.player.reports}</h1>\r\n        <div className=\"passButton\" onClick={this.clickPassPhase.bind(this)}>Pass</div>\r\n        \r\n        <div className=\"player-score\">\r\n          <h1>In play</h1>\r\n          <div className=\"redBoard\">{cardsInRedBoard}</div>\r\n          <div className=\"yellowBoard\">{cardsInYellowBoard}</div>\r\n          <div className=\"greenBoard\">{cardsInGreenBoard}</div>\r\n        </div>\r\n        <div className=\"player-hand\">\r\n          <h1>Hand</h1>\r\n          <div>{cardsHand}</div>\r\n        </div>\r\n        {/* <div className=\"player-deck\">\r\n          <h1>Deck:</h1>\r\n          <div>{cardsDeck}</div>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { randomBytes } from \"crypto\";\r\n\r\nexport default function generateUniqueId() {\r\n    return randomBytes(4).toString('HEX');\r\n}","import generateUniqueId from \"../../../utils/generateUniqueId\"\r\n\r\nexport default class BasicReaction {\r\n    constructor(data) {\r\n        this.id = generateUniqueId();\r\n        this.name = data.name;\r\n        this.red = data.red || {reports:0, likes:0};\r\n        this.yellow = data.yellow || { reports: 0, likes: 0 };\r\n        this.green = data.green || { reports: 0, likes: 0 };\r\n        this.use = data.use || 0;\r\n        this.textBox = data.textBox || \" \"\r\n\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class bigExplanation extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Big Explanation\",\r\n            green: { reports: 0, likes: 0 },\r\n            yellow: { reports: 1, likes: 0 },\r\n            red: { reports: 2, likes: 0 },\r\n            use: 4,\r\n            textBox:\"Target Player: 🟩\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new bigExplanation());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class boldClaim extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Bold Claim\",\r\n            green: { reports: 0, likes: 0 },\r\n            yellow: { reports: 1, likes: 0 },\r\n            red: { reports: 1, likes: 0 },\r\n            use: 11,\r\n            textBox:\"Target Player: +🚫👍👍👍\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new boldClaim());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class exposed extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Exposed\",\r\n            green: { reports: 0, likes: 0 },\r\n            yellow: { reports: 1, likes: 0 },\r\n            red: { reports: 1, likes: 0 },\r\n            use: 5,\r\n            textBox:\"Current Player: -🚫🚫 Target player: +🚫\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new exposed());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class goodWill extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Good Will\",\r\n            green: { reports: 0, likes: 1 },\r\n            yellow: { reports: 0, likes: 3 },\r\n            red: { reports: 0, likes: 3 },\r\n            use: 9,\r\n            textBox:\"Current Player:\\n + 👍👍👍 \\n All players: -🚫\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new goodWill());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class lowComent extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Low Coment \",\r\n            green: { reports: 0, likes: 1 },\r\n            yellow: { reports: 0, likes: 3 },\r\n            red: { reports: 0, likes: 3 },\r\n            use: 3,\r\n            textBox:\"Target Player: 🟨\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new lowComent());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class netForgives extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Net Forgives\",\r\n            green: { reports: 0, likes: 0 },\r\n            yellow: { reports: 1, likes: 0 },\r\n            red: { reports: 2, likes: 0 },\r\n            use: 10,\r\n            textBox:\"All players: -🚫\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new netForgives());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class netRage extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Net Rage\",\r\n            green:{reports:0,likes:1},\r\n            yellow: { reports: 0, likes:1 },\r\n            red: { reports: 0, likes:1 },\r\n            use:1,\r\n            textBox:\"All players: +🚫\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new netRage());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class pushLimits extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Pushing Limits\",\r\n            green: { reports: 0, likes: 1 },\r\n            yellow: { reports: 0, likes: 1 },\r\n            red: { reports: 0, likes: 3 },\r\n            use: 2,\r\n            textBox:\"Target Player: 🟥\"\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new pushLimits());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class redemption extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Redemption\",\r\n            green: { reports: 0, likes: 0 },\r\n            yellow: { reports: 2, likes: 0 },\r\n            red: { reports: 2, likes: 0 },\r\n            use: 6,\r\n            textBox:\"Current Player: -🚫🚫\" \r\n\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new redemption());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class socialNetwork extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Social Network\",\r\n            green: { reports: 0, likes: 0 },\r\n            yellow: { reports: 2, likes: 0 },\r\n            red: { reports: 2, likes: 0 },\r\n            use: 12,\r\n            textBox:\"Current Player: + 👍 \\n All players: +👍\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new socialNetwork());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class webForgives extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Web Forgives\",\r\n            green: { reports: 0, likes: 1 },\r\n            yellow: { reports: 0, likes: 1 },\r\n            red: { reports: 0, likes: 1 },\r\n            use: 7,\r\n            textBox:\"All players: -🚫🚫\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new webForgives());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicReaction from \"./basicReaction\";\r\n\r\nexport default class webRage extends basicReaction {\r\n    constructor() {\r\n        super({\r\n            name: \"Web Rage\",\r\n            green: { reports: 0, likes: 1 },\r\n            yellow: { reports: 0, likes: 1 },\r\n            red: { reports: 0, likes: 3 },\r\n            use: 8,\r\n            textBox:\"All players: +🚫🚫\" \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new webRage());\r\n        }\r\n        return cards;\r\n    }\r\n}","import generateUniqueId from \"../../../utils/generateUniqueId\"\r\n\r\nexport default class BasicTopic {\r\n    constructor(data){\r\n        this.id = generateUniqueId();\r\n        this.name = data.name;\r\n        this.red = data.red || 0;\r\n        this.yellow = data.yellow || 0;\r\n        this.green = data.green || 0;\r\n\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class boldMemeTopic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"boldMemeTopic\",\r\n            yellow: 2,\r\n            red: 1,\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new boldMemeTopic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class diyTopic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"diyTopic\",\r\n            green: 2,\r\n            red: 1\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new diyTopic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class dogTopic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"dogTopic\",\r\n            green: 3, \r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new dogTopic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class exposeTopic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"exposeTopic\",\r\n            red: 2,\r\n            green: 1\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new exposeTopic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class hotPic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"hotPic\",\r\n            red: 2,\r\n            yellow: 1,\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new hotPic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class movieCriticTopic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"movieCriticTopic\",\r\n            yellow: 3\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new movieCriticTopic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class nostalgicTopic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"nostalgicTopic\",\r\n            green:2,\r\n            yellow: 1\r\n\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new nostalgicTopic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class oddTopic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"oddTopic\",\r\n            green: 1,\r\n            yellow: 1,\r\n            red: 1\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new oddTopic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class politicsTopic extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"politicsTopic\",\r\n            red: 3\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new politicsTopic());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class topic1 extends basicTopic{\r\n    constructor(){\r\n        super({\r\n            name:\"topic1\",\r\n            yellow:2\r\n        })\r\n    }\r\n\r\n    static create(qty){\r\n        let cards = [];\r\n        for (let i = 0; i <qty; i++){\r\n            cards.push(new topic1());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class topic2 extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"topic2\",\r\n            green: 2\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new topic2());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class topic3 extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"topic3\",\r\n            red: 2\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new topic3());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class topic4 extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"topic4\",\r\n            yellow: 1,\r\n            red: 1\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new topic4());\r\n        }\r\n        return cards;\r\n    }\r\n}","import basicTopic from \"./basicTopic\";\r\n\r\nexport default class topic5 extends basicTopic {\r\n    constructor() {\r\n        super({\r\n            name: \"topic5\",\r\n            green:1 ,\r\n            yellow: 1\r\n        })\r\n    }\r\n\r\n    static create(qty) {\r\n        let cards = [];\r\n        for (let i = 0; i < qty; i++) {\r\n            cards.push(new topic5());\r\n        }\r\n        return cards;\r\n    }\r\n}","import bigExplanation from \"./components/Cards/Reactions/bigExplanation\"\r\nimport boldClaim from \"./components/Cards/Reactions/boldClaim\"\r\nimport exposed from \"./components/Cards/Reactions/exposed\"\r\nimport goodWill from \"./components/Cards/Reactions/goodWill\"\r\nimport lowComent from \"./components/Cards/Reactions/lowComent\"\r\nimport netForgives from \"./components/Cards/Reactions/netForgives\"\r\nimport netRage from \"./components/Cards/Reactions/netRage\"\r\nimport pushLimits from \"./components/Cards/Reactions/pushLimits\"\r\nimport redemption from \"./components/Cards/Reactions/redemption\"\r\nimport socialNetwork from \"./components/Cards/Reactions/socialNetwork\"\r\nimport webForgives from \"./components/Cards/Reactions/webForgives\"\r\nimport webRage from \"./components/Cards/Reactions/webRage\"\r\nimport boldMemeTopic from \"./components/Cards/Topics/boldMemeTopic\"\r\nimport diyTopic from \"./components/Cards/Topics/diyTopic\"\r\nimport dogTopic from \"./components/Cards/Topics/dogTopic\"\r\nimport exposeTopic from \"./components/Cards/Topics/exposeTopic\"\r\nimport hotPic from \"./components/Cards/Topics/hotPic\"\r\nimport movieCriticTopic from \"./components/Cards/Topics/movieCriticTopic\"\r\nimport nostalgicTopic from \"./components/Cards/Topics/nostalgicTopic\"\r\nimport oddTopic from \"./components/Cards/Topics/oddTopic\"\r\nimport politicsTopic from \"./components/Cards/Topics/politicsTopic\"\r\nimport topic1 from \"./components/Cards/Topics/topic1\"\r\nimport topic2 from \"./components/Cards/Topics/topic2\"\r\nimport topic3 from \"./components/Cards/Topics/topic3\"\r\nimport topic4 from \"./components/Cards/Topics/topic4\"\r\nimport topic5 from \"./components/Cards/Topics/topic5\"\r\nimport generateUniqueId from \"./utils/generateUniqueId\"\r\n\r\nexport const iTreta = {\r\n    name: \"iTreta\",\r\n    setup: () => ({\r\n        players: [\r\n            {\r\n                id: \"player1\",\r\n                hand: [],\r\n                board: { red: [], yellow: [], green: [] },\r\n                likes: 0,\r\n                reports: 0,\r\n                eliminated: false\r\n            },\r\n            {\r\n                id: \"player2\",\r\n                hand: [],\r\n                board: { red: [], yellow: [], green: [] },\r\n                likes: 0,\r\n                reports: 0,\r\n                eliminated: false\r\n            },\r\n            {\r\n                id: \"player3\",\r\n                hand: [],\r\n                board: { red: [], yellow: [], green: [] },\r\n                likes: 0,\r\n                reports: 0,\r\n                eliminated: false\r\n            },\r\n            {\r\n                id: \"player4\",\r\n                hand: [],\r\n                board: { red: [], yellow: [], green: [] },\r\n                likes: 0,\r\n                reports: 0,\r\n                eliminated: false\r\n            }\r\n        ],\r\n        offer: {\r\n            topics: [].concat(boldMemeTopic.create(2), diyTopic.create(2), dogTopic.create(2), exposeTopic.create(2), hotPic.create(2), movieCriticTopic.create(2), nostalgicTopic.create(2), oddTopic.create(2), politicsTopic.create(2), topic1.create(2), topic2.create(2), topic3.create(2), topic4.create(2), topic5.create(2)),\r\n            deck: [].concat(bigExplanation.create(10), boldClaim.create(10), exposed.create(10), goodWill.create(10), lowComent.create(10), netForgives.create(10), netRage.create(10), pushLimits.create(10), redemption.create(10), socialNetwork.create(10), webForgives.create(10), webRage.create(10)),\r\n            topicsOffer:[],\r\n            discardPile: [],\r\n            discartedTopics:[],\r\n            activePlayers:[0,1,2,3]\r\n        },\r\n        \r\n    }),\r\n    endIf: (G, ctx) => {\r\n        if ((G.players[ctx.currentPlayer].likes > 15)&(!G.players[ctx.currentPlayer].eliminated)) {\r\n            ctx.events.endPhase()\r\n            return { winner: ctx.currentPlayer }\r\n        }\r\n        if(G.offer.activePlayers.length<2){\r\n            if(G.offer.activePlayers.length===1){\r\n                return{ winner: G.offer.activePlayers[0]}\r\n            }\r\n            else return{draw : true}\r\n        }\r\n    },\r\n    phases: {\r\n        setupPhase: {\r\n            start: true,\r\n            next: 'playPhase',\r\n            onBegin: (G, ctx) => {\r\n                shuffleDeck(G);\r\n                shuffleTopic(G,ctx);\r\n                for (let i = 0; i < G.players.length; i++) {\r\n                    while (G.players[i].hand.length < 5) {\r\n                        G.players[i].hand.push(\r\n                            G.offer.deck.shift()\r\n                        )\r\n                    }\r\n                }\r\n                ctx.events.endPhase()\r\n            }\r\n        },\r\n        playPhase: {\r\n            turn: {\r\n                onBegin: (G, ctx) => {\r\n                    dealTopics(G, ctx)\r\n                },\r\n                activePlayers: {\r\n                    currentPlayer: 'topicSelection',\r\n                },\r\n                stages: {\r\n                    topicSelection: {\r\n                        next: 'playStage',\r\n                        moves: { chooseTopic,skip },\r\n                    },\r\n                    playStage: {\r\n                        moves: { playCard, pass },\r\n                        next: 'topicSelection'\r\n                    }\r\n                }\r\n            }, \r\n            next: 'finishPhase'\r\n        },\r\n        finishPhase:{\r\n\r\n        }\r\n    },\r\n    ai: {\r\n        enumerate : (G, ctx) => {\r\n            let moves = [];\r\n\r\n            if ((ctx.activePlayers !== null) && (ctx.phase !== null)) {\r\n                if (ctx.activePlayers[ctx.currentPlayer] === \"topicSelection\" && G.players[ctx.currentPlayer].eliminated === false) {\r\n                    for (let i = 0; i < G.offer.topicsOffer.length; i++) {\r\n                        moves.push({ move: 'chooseTopic', args: [i] })\r\n                    }\r\n                }\r\n                if (ctx.activePlayers[ctx.currentPlayer] === \"playStage\" && G.players[ctx.currentPlayer].eliminated === false) {\r\n                    for (let i = 0; i < G.players[ctx.currentPlayer].hand.length; i++) {\r\n                        moves.push({ move: 'playCard', args: ([i, 0]) });\r\n                    }\r\n                    moves.push({ move: 'pass', args: null })\r\n                }\r\n                if (G.players[ctx.currentPlayer].eliminated === true) {\r\n                    moves.push({ move: 'skip', args: null })\r\n                }\r\n            }\r\n            return moves;\r\n            \r\n        }\r\n    },\r\n\r\n};\r\nfunction playCard(G, ctx, cardIndex, chosenPlayer) {\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 1) {\r\n        for (let i = 0; i < G.players.length; i++) {\r\n            G.players[i].reports = G.players[i].reports + 1;\r\n        }\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 2) {\r\n        G.players[chosenPlayer].reports = G.players[chosenPlayer].reports + G.offer.deck[0].red.reports;\r\n        G.players[chosenPlayer].likes = G.players[chosenPlayer].likes + G.offer.deck[0].red.likes;\r\n        G.players[chosenPlayer].board.red.push(\r\n            G.offer.deck.shift()\r\n        );\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 3) {\r\n        G.players[chosenPlayer].reports = G.players[chosenPlayer].reports + G.offer.deck[0].yellow.reports;\r\n        G.players[chosenPlayer].likes = G.players[chosenPlayer].likes + G.offer.deck[0].yellow.likes;\r\n        G.players[chosenPlayer].board.yellow.push(\r\n            G.offer.deck.shift()\r\n        );\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 4) {\r\n        G.players[chosenPlayer].reports = G.players[chosenPlayer].reports + G.offer.deck[0].green.reports;\r\n        G.players[chosenPlayer].likes = G.players[chosenPlayer].likes + G.offer.deck[0].green.likes;\r\n        G.players[chosenPlayer].board.green.push(\r\n            G.offer.deck.shift()\r\n        );\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 5) {\r\n        G.players[chosenPlayer].reports = G.players[chosenPlayer].reports + 1;\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 6) {\r\n        if (G.players[ctx.currentPlayer].reports > 0) {\r\n            G.players[ctx.currentPlayer].reports = G.players[ctx.currentPlayer].reports - 1;\r\n        }\r\n        if (G.players[ctx.currentPlayer].reports > 0) {\r\n            G.players[ctx.currentPlayer].reports = G.players[ctx.currentPlayer].reports - 1;\r\n        }\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 7) {\r\n        for (let i = 0; i < G.players.length; i++) {\r\n            if (G.players[i].reports > 0) {\r\n                G.players[i].reports = G.players[i].reports - 1;\r\n            }\r\n            if (G.players[i].reports > 0) {\r\n                G.players[i].reports = G.players[i].reports - 1;\r\n            }\r\n        }\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 8) {\r\n        for (let i = 0; i < G.players.length; i++) {\r\n            G.players[i].reports = G.players[i].reports + 2;\r\n        }\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 9) {\r\n        G.players[ctx.currentPlayer].likes = G.players[ctx.currentPlayer].likes + 3;\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 10) {\r\n        for (let i = 0; i < G.players.length; i++) {\r\n            if (G.players[i].reports > 0) {\r\n                G.players[i].reports = G.players[i].reports - 1;\r\n            }\r\n        }\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 13) {\r\n        G.players[ctx.currentPlayer].likes = G.players[ctx.currentPlayer].likes + 2;\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 11) {\r\n        G.players[chosenPlayer].likes = G.players[chosenPlayer].likes + 4;\r\n        G.players[chosenPlayer].reports = G.players[chosenPlayer].reports + 1;\r\n    }\r\n    if (G.players[ctx.currentPlayer].hand[cardIndex].use === 12) {\r\n        for (let i = 0; i < G.players.length; i++) {\r\n            G.players[i].likes = G.players[i].likes + 1;\r\n        }\r\n        G.players[ctx.currentPlayer].likes++\r\n    }\r\n    G.offer.discardPile.push(\r\n        G.players[ctx.currentPlayer].hand[cardIndex]\r\n    );\r\n    G.players[ctx.currentPlayer].hand.splice(cardIndex, 1)\r\n    \r\n}\r\nfunction chooseTopic(G, ctx, topicIndex) {\r\n    for (let i = 0; i < G.offer.topicsOffer[topicIndex].red; i++) {\r\n        G.players[ctx.currentPlayer].reports = G.players[ctx.currentPlayer].reports + G.offer.deck[0].red.reports;\r\n        G.players[ctx.currentPlayer].likes = G.players[ctx.currentPlayer].likes + G.offer.deck[0].red.likes;\r\n        G.players[ctx.currentPlayer].board.red.push(\r\n            G.offer.deck.shift()\r\n        );\r\n    };\r\n    for (let i = 0; i < G.offer.topicsOffer[topicIndex].yellow; i++) {\r\n        G.players[ctx.currentPlayer].reports = G.players[ctx.currentPlayer].reports + G.offer.deck[0].yellow.reports;\r\n        G.players[ctx.currentPlayer].likes = G.players[ctx.currentPlayer].likes + G.offer.deck[0].yellow.likes\r\n        G.players[ctx.currentPlayer].board.yellow.push(\r\n            G.offer.deck.shift()\r\n        );\r\n    };\r\n    for (let i = 0; i < G.offer.topicsOffer[topicIndex].green; i++) {\r\n        G.players[ctx.currentPlayer].reports = G.players[ctx.currentPlayer].reports + G.offer.deck[0].green.reports;\r\n        G.players[ctx.currentPlayer].likes = G.players[ctx.currentPlayer].likes + G.offer.deck[0].green.likes\r\n        G.players[ctx.currentPlayer].board.green.push(\r\n            G.offer.deck.shift()\r\n        );\r\n    }\r\n    G.offer.discartedTopics.push(\r\n        G.offer.topicsOffer[topicIndex]\r\n    )\r\n    G.offer.topicsOffer.splice(topicIndex,1);\r\n    ctx.events.endStage();\r\n}\r\nfunction draw(G, ctx) {\r\n    if (G.offer.deck.length === 0) {\r\n        G.offer.deck = G.offer.discardPile;\r\n        G.offer.discardPile = [];\r\n        shuffleDeck(G, ctx)\r\n    }\r\n    if (G.offer.deck.length > 0) {\r\n        G.players[ctx.currentPlayer].hand.push(\r\n            G.offer.deck.shift()\r\n        )\r\n    }\r\n}\r\nfunction shuffleDeck(G) {\r\n    G.offer.deck.sort(() => Math.random() - 0.5);\r\n}\r\nfunction shuffleTopic(G, ctx) {\r\n    G.offer.topics.sort(() => Math.random() - 0.5);\r\n}\r\nfunction pass(G, ctx) {\r\n    endPlayerTurn(G, ctx)\r\n    ctx.events.endTurn()\r\n}\r\nfunction skip(G,ctx){\r\n    ctx.events.endTurn()\r\n}\r\nfunction endPlayerTurn(G, ctx) {\r\n    for (let i=0 ; i < G.players.length; i++) {\r\n        if (G.players[i].reports > 5) {\r\n            G.players[i].eliminated = true\r\n            for(let o=0; o<G.offer.activePlayers.length; o++){\r\n                if(G.offer.activePlayers[o]===i){\r\n                    G.offer.activePlayers.splice(o,1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction dealTopics(G, ctx){\r\n    while(G.offer.topicsOffer.length<5){\r\n        G.offer.topicsOffer.push(\r\n            G.offer.topics.shift()\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    draw,\r\n    shuffleDeck,\r\n    shuffleTopic,\r\n    playCard,\r\n    chooseTopic,\r\n    pass,\r\n    endPlayerTurn,\r\n    dealTopics,\r\n    skip,\r\n}","import React from 'react';\r\nimport { render } from \"react-dom\";\r\nimport {SocketIO} from 'boardgame.io/multiplayer'\r\nimport { Client } from 'boardgame.io/react';\r\nimport { Local } from 'boardgame.io/multiplayer';\r\nimport GameBoard from './components/GameBoard';\r\nimport { iTreta } from './Game';\r\n\r\nconst {protocol, hostname, port} = window.location;\r\nconst server = `${protocol}//${hostname}:${port}`\r\n\r\nconst ITretaClient = Client({\r\n  game: iTreta,\r\n  board: GameBoard,\r\n  numPlayers: 4,\r\n  multiplayer: SocketIO({server}),\r\n});\r\n\r\n// const ITretaClient = Client({\r\n//   game: iTreta,\r\n//   board: GameBoard,\r\n//   numPlayers: 4,\r\n//   multiplayer: SocketIO({server: 'https://thebestinfluencer.herokuapp.com'}),\r\n// });\r\n\r\n//const App = Client({ game: iTreta });\r\n\r\n\r\n// const App = () => (\r\n//   <div>\r\n//     <ITretaClient playerID=\"0\" />\r\n//     {/* <ITretaClient playerID=\"1\" />\r\n//     <ITretaClient playerID=\"2\" />\r\n//     <ITretaClient playerID=\"3\" />    */}\r\n//   </div>\r\n// );\r\n// export default App;\r\n\r\nclass App extends React.Component {\r\n  state = { playerID: null };\r\n\r\n  render() {\r\n    if (this.state.playerID === null) {\r\n      return (\r\n        <div>\r\n          <p>Play as</p>\r\n          <button onClick={() => this.setState({ playerID: \"0\" })}>\r\n            Player 0\r\n          </button>\r\n          <button onClick={() => this.setState({ playerID: \"1\" })}>\r\n            Player 1\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <ITretaClient playerID={this.state.playerID} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));","import React from \"react\";\r\nimport GameCardReactions from \"../GameCardReactions\";\r\nimport GameCardTopics from \"../GameCardTopics\";\r\nimport GamePlayerBoard from \"../GamePlayerBoard\";\r\nimport \"./styles.css\";\r\n\r\nexport default function GameBoard({G, ctx, moves, events}) {\r\n  function chooseTopicHandler(k) {\r\n    console.log(`chooseTopicHandler`, k);\r\n    moves.chooseTopic(k);\r\n  }\r\n  function playCardHandler(k) {\r\n    console.log(`playCardHandler`, k);\r\n    moves.playCard(k);\r\n  }\r\n  function clickPassPhase() {\r\n    console.log(`passPhase`);\r\n    moves.pass();\r\n  }\r\n\r\n  let cards = G.offer.topicsOffer.map((card, k) => (\r\n    <GameCardTopics\r\n      card={card}\r\n      key={card.id}\r\n      onClickChooseTopic={() => {\r\n        chooseTopicHandler(k);\r\n      }}\r\n    />\r\n  ));\r\n  let players = G.players.map((player, k) => (\r\n    <GamePlayerBoard\r\n      player={player}\r\n      key={`player${k}`}\r\n      clickPassPhase={clickPassPhase.bind(this)}\r\n      playCardHandler={playCardHandler.bind(this)}\r\n    />\r\n  ));\r\n  return (\r\n    <div className=\"game-board\">\r\n      <div className=\"card-offer\">\r\n        <h1>Offer:</h1>\r\n        <div className=\"card-offer-cards\">{cards}</div>\r\n      </div>\r\n      <div className=\"player-boards\">\r\n        <h1>Players:</h1>\r\n        <div className=\"player-areas\">{players}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}